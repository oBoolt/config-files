;; ################################
;; #          VARIABLES           #
;; ################################
(defpoll dateData
  :interval "1s"
  :initial "..."
  "date +%H:%M:%S")
(deflisten activeWorkspace
  :initial "1"
  "scripts/execs/hyprland --active")
(deflisten workspacesData
  :initial "[1]"
  "scripts/execs/hyprland --workspaces")
(deflisten titleData
  :initial "..."
  "scripts/execs/hyprland --active-window")
;; ################################
;; #            WINDOWS           #
;; ################################
(defwindow bar
  :monitor 0
  :geometry (geometry
              :width "100%"
              :height "30px"
              :anchor "top center")
  :stacking "fg"
  :exclusive true
  (box
    :orientation "h"
    :space-evenly true
    (left)
    (center)
    (right)))
;; ################################
;; #            WIDGETS           #
;; ################################
(defwidget separator []
  (box 
    :class "separator"
    (label
      :text "|")))

(defwidget workspaces []
  (box
    :orientation "h"
    :hexpand true
    :spacing 10
    :class "workspaces"
    (for workspace in workspacesData
      (button
        :class {workspace == activeWorkspace ? "active" : ""}
        :onclick "hyprctl dispatch workspace ${workspace}"
        (label
          :vexpand false
          :text workspace)))))

(defwidget date []
  (box
    :class "date"
    (label
      :text dateData)))

(defwidget title []
  (box
    :class "title"
    (label
      :text titleData)))

(defwidget powerbutton []
  (eventbox
    :class "power-button"
    :onclick "notify-send 'shutdown'"
    (label
      :justify "center"
      :text "󰐥")))

(defwidget battery [capacity status]
  (box
    :class "battery"
    :space-evenly false
    :spacing 10
    (label
      :class "icon"
      :text {status == "Charging" ? "󰂄" : 
             capacity < 10 ? "󰂃" :
             capacity < 20 ? "󰁺" :
             capacity < 30 ? "󰁻" :
             capacity < 40 ? "󰁼" :
             capacity < 50 ? "󰁽" :
             capacity < 60 ? "󰁾" :
             capacity < 70 ? "󰁿" :
             capacity < 80 ? "󰂀" :
             capacity < 90 ? "󰂁" :
             capacity < 100 ? "󰂂" : "󰁹"})
             
    (label
      :class "number"
      :text "${capacity}%")))

(defwidget left []
  (box
    :halign "start"
    :space-evenly false
    :spacing 10
    :class "left area"
    (date)
    (separator)
    (workspaces)))

(defwidget center []
  (box
    :halign "center"
    :class "center area"
    (title)))

(defwidget right []
  (box
    :halign "end"
    :space-evenly false
    :spacing 10
    :class "right area"
    (battery
      :capacity {EWW_BATTERY.BAT0.capacity}
      :status {EWW_BATTERY.BAT0.status})
    (separator)
    (powerbutton)))

