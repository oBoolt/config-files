;; ################################
;; #          VARIABLES           #
;; ################################
(defvar spacing 10)
(defvar duration "350ms")
(defvar tray false)
(defvar powermenu false)
(defvar brightnessDevice "intel_backlight")
(defvar showMusic false)
(defvar revealAudio false)
(defvar revealBattery false)
(defvar revealBrightness false)
(defpoll date
  :interval "10s"
  :initial "00:00"
  "date +%H:%M")
(defpoll brightnessValue :interval "5s" "brightnessctl -m -d intel_backlight | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(deflisten activeWorkspace
  :initial "1"
  "scripts/execs/hyprland --active")
(deflisten workspaces
  :initial "[1]"
  "scripts/execs/hyprland --workspaces")
(deflisten title
  :initial "..."
  "scripts/execs/hyprland --active-window")
(deflisten volume
  :initial "0.5"
  "scripts/audio.sh --volume")
(deflisten muted
  :initial false
  "scripts/audio.sh --muted")
(deflisten music
  :initial "..."
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}'")
(deflisten fullscreen
  :initial false
  "scripts/execs/hyprland --fullscreen") 
;; ################################
;; #            WINDOWS           #
;; ################################
(defwindow bar
  :monitor 0
  :geometry (geometry
             :width "100%"
             :height "30px"
             :anchor "top center")
  :stacking "fg"
  :exclusive true
  (box
    :orientation "h"
    :space-evenly true
    (left)
    (center)
    (right)))

(defwindow tray
  :monitor 0
  :geometry (geometry
             :width "200px"
             :height "50px"
             :x "2.5%"
             :y "10px"
             :anchor "top right")
  :stacking "overlay"
  :exclusive false
  (eventbox
    :onhoverlost "scripts/toggle.sh tray"
    (systray)))
(defwindow powermenu
  :monitor 0
  :geometry (geometry
              :width "50px"
              :height "150px"
              :anchor "top right"
              :y "5px"
              :x "0.9%")
  :stacking "overlay"
  :exclusive false
  (eventbox
    :onhoverlost "scripts/toggle.sh powermenu"
    (powermenu)))
(defwindow fullscreen
  :monitor 0
  :geometry (geometry
             :width "16px"
             :height "16px"
             :x "15px"
             :y "15px"
             :anchor "bottom right")
  :stacking "fg"
  :exclusive false
  (label
    :active {fullscreen}
    :visible {fullscreen}
    :text ""))
;; ################################
;; #            WIDGETS           #
;; ################################
(defwidget separator []
  (box 
    :class "separator"
    (label
      :text "|")))

(defwidget slider [reveal value onchange]
  (revealer
    :reveal reveal
    :transition "slideleft"
    :duration duration
    (scale
      :class "slider"
      :value value
      :min 0
      :max 100
      :onchange onchange))) 

(defwidget workspaces []
  (box
    :class "workspaces-widget"
    :orientation "h"
    :hexpand true
    :spacing {spacing}
    (for workspace in workspaces
      (button
        :class {workspace == activeWorkspace ? "active" : ""}
        :onclick "hyprctl dispatch workspace ${workspace}"
        (label
          :class "icon"
          :text {workspace == activeWorkspace ? "" : ""})))))

(defwidget date []
  (box
    :class "date-widget"
    :space-evenly false
    (label
      :class "icon"
      :text "󰥔")
    (label
      :text date)))

(defwidget title []
  (eventbox
    :onclick "eww update showMusic=${!showMusic}"
    (box
      :class "title-widget"
      (label
        :truncate true
        :text {showMusic ? music : title}))))

(defwidget power []
  (box
    :class "power-widget widget-box"
    :hexpand false
    (eventbox
      :onclick "scripts/toggle.sh powermenu"
      :cursor "pointer"
      (label
        :class "icon"
        :text "󰐥"))))

(defwidget battery [capacity status]
  (eventbox
    :onhover "${EWW_CMD} update revealBattery=true"
    :onhoverlost "${EWW_CMD} update revealBattery=false"
    (box
      :class "battery-widget ${capacity <= 10 ? "critical" : 
                               capacity <= 25 ? "low" : 
                               capacity <= 50 ? "half" :
                               capacity <= 75 ? "high" : "full" }"
      :space-evenly false
      :tooltip status
      (label
        :class "icon"
        :text {status == "Charging" ? "󰂄" : 
               capacity < 10 ? "󰂃" :
               capacity < 20 ? "󰁺" :
               capacity < 30 ? "󰁻" :
               capacity < 40 ? "󰁼" :
               capacity < 50 ? "󰁽" :
               capacity < 60 ? "󰁾" :
               capacity < 70 ? "󰁿" :
               capacity < 80 ? "󰂀" :
               capacity < 90 ? "󰂁" :
               capacity < 100 ? "󰂂" : "󰁹"})
      (revealer
        :reveal revealBattery
        :transition "slideleft"
        :duration duration
        (label
          :text "${capacity}%")))))

(defwidget audio [volume muted]
  (eventbox
    :onhover "${EWW_CMD} update revealAudio=true"
    :onhoverlost "${EWW_CMD} update revealAudio=false"
    :cursor "pointer"
    (box
      :class "audio-widget"
      :space-evenly false
      :tooltip {muted ? "Muted" : "${floor(volume * 100)}%"}
      (button
        :onclick "wpctl set-mute @DEFAULT_SINK@ toggle"
        (label
          :class "icon"
          :text {muted ? "󰖁" : 
                 volume == 0 ? "󰝟" : 
                 volume <= 0.30 ? "󰕿" : 
                 volume <= 0.65 ? "󰖀" : "󰕾"}))
      (slider
        :reveal revealAudio
        :value {volume * 100}
        :onchange "wpctl set-volume @DEFAULT_SINK@ {}%"))))

(defwidget tray []
  (box 
    :class "tray-widget widget-box"
    :space-evenly false
    (eventbox
      :class {tray ? "active" : ""}
      :cursor "pointer"
      :onclick "scripts/toggle.sh tray"
      (label
        :class "icon"
        :text "󰅀"))))

(defwidget powermenu []
  (box
    :class "powermenu-widget widget-box"
    :valign "fill"
    :orientation "vertical"
    (eventbox
      :class "button suspend"
      :onclick "systemctl suspend"
      :cursor "pointer"
      (label
        :class "icon"
        :text "󰏦"))
    (eventbox
      :class "button reboot"
      :onclick "reboot"
      :cursor "pointer"
      (label
        :class "icon"
        :text "󰜉"))
    (eventbox
      :class "button shutdown"
      :onclick "shutdown 0"
      :cursor "pointer"
      (label
        :class "icon"
        :text "󰐥"))))

(defwidget brightness [value device]
                       
  (eventbox
    :onhover "${EWW_CMD} update revealBrightness=true"
    :onhoverlost "${EWW_CMD} update revealBrightness=false"
    (box
      :class "brightness-widget"
      :space-evenly false
      :tooltip device
      (label
        :class "icon"
        :text {value < 16 ? "󰃚" :
               value < 32 ? "󰃛" :
               value < 48 ? "󰃜" :
               value < 64 ? "󰃝" :
               value < 75 ? "󰃞" :
               value < 90 ? "󰃟" : "󰃠"})
      (revealer
        :reveal revealBrightness
        :transition "slideleft"
        :duration duration
        (label
          :text "${value}%")))))

(defwidget left []
  (box
    :halign "start"
    :space-evenly false
    :spacing {spacing}
    :class "left area"
    (date)
    (separator)
    (workspaces)))

(defwidget center []
  (box
    :halign "center"
    :class "center area"
    (title)))

(defwidget right []
  (box
    :halign "end"
    :space-evenly false
    :class "right area"
    (audio
      :volume volume
      :muted muted)
    (brightness
      :value brightnessValue
      :device brightnessDevice)
    (battery
      :capacity {EWW_BATTERY.BAT0.capacity}
      :status {EWW_BATTERY.BAT0.status})
    (separator)
    (tray)
    (separator)
    (power)))

